[{"/Users/gabebravo/Desktop/projects/recoil-typescript/src/App.tsx":"1","/Users/gabebravo/Desktop/projects/recoil-typescript/src/index.tsx":"2","/Users/gabebravo/Desktop/projects/recoil-typescript/src/reportWebVitals.ts":"3","/Users/gabebravo/Desktop/projects/recoil-typescript/src/atoms/atoms.ts":"4","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/Header.tsx":"5","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/Panels.tsx":"6","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/TeamsList.tsx":"7","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/TeamItem.tsx":"8","/Users/gabebravo/Desktop/projects/recoil-typescript/src/types/types.ts":"9","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/AddTeam.js":"10"},{"size":215,"mtime":1611542482656,"results":"11","hashOfConfig":"12"},{"size":574,"mtime":1611541801565,"results":"13","hashOfConfig":"12"},{"size":425,"mtime":1611540813134,"results":"14","hashOfConfig":"12"},{"size":104,"mtime":1611548387095,"results":"15","hashOfConfig":"12"},{"size":1074,"mtime":1611542893076,"results":"16","hashOfConfig":"12"},{"size":938,"mtime":1611549992198,"results":"17","hashOfConfig":"12"},{"size":807,"mtime":1611548595766,"results":"18","hashOfConfig":"12"},{"size":392,"mtime":1611547688734,"results":"19","hashOfConfig":"12"},{"size":142,"mtime":1611547512242,"results":"20","hashOfConfig":"12"},{"size":2653,"mtime":1611549930700,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1pdavh5",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/gabebravo/Desktop/projects/recoil-typescript/src/App.tsx",[],["44","45"],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/index.tsx",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/reportWebVitals.ts",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/atoms/atoms.ts",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/Header.tsx",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/Panels.tsx",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/TeamsList.tsx",["46"],"import { ReactElement } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useRecoilValue } from 'recoil'\nimport { teamsState } from '../atoms/atoms'\nimport TeamItem from './TeamItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function TeamsList(): ReactElement {\n  const classes = useStyles();\n  const teams = useRecoilValue(teamsState);\n  console.log('teams', teams);\n\n  return (\n    <div>\n      <h2>Dream Teams</h2>\n      {teams.length === 0 ? (\n        <p>No teams built yet</p>\n      ) : (\n        <>\n          {teams.map((team: any): ReactElement => (\n            <TeamItem key={team.id} {...team} />\n          ))}\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/TeamItem.tsx",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/types/types.ts",[],"/Users/gabebravo/Desktop/projects/recoil-typescript/src/components/AddTeam.js",[],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":17,"column":9,"nodeType":"53","messageId":"54","endLine":17,"endColumn":16},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"@typescript-eslint/no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]